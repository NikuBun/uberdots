set nocompatible "be IMproved

if has('vim_starting')
  set runtimepath+=~/.vim/bundle/neobundle.vim/
end

call neobundle#rc(expand('~/.vim/bundle'))

try
  source ~/.vimrc.local
catch
endtry


" ================ General Config ====================
set number                      "Line numbers are good
set backspace=indent,eol,start  "Allow backspace in insert mode
set history=1000                "Store lots of :cmdline history
set showcmd                     "Show incomplete cmds down the bottom
set showmode                    "Show current mode down the bottom
set showmatch                   "Show matching brackets
set gcr=a:blinkon0              "Disable cursor blink
set visualbell                  "No sounds
set autoread                    "Reload files changed outside vim
set hidden                      "This lets buffers exist without a window
set virtualedit=onemore         "give extra space at end of line
set magic
set fcs=vert:│
set t_Co=256                    "pretty colors

" syntax on                       "turn on syntax highlighting

" Change leader to a comma because the backslash is too far away
let mapleader=","
let g:mapleader=","
let maplocalleader=","
let g:mapleader=","

" =============== Vundle Initialization ===============
" Use NeoBundle plugin to manage all other plugins
if filereadable(expand("~/.vim/bundles.vim"))
  source ~/.vim/bundles.vim
endif

" ================ Turn Off Swap Files ==============
set noswapfile
set nobackup
set nowb

" ================ Persistent Undo ==================
" Keep undo history across sessions, by storing in file.
" Only works all the time.
if has('persistent_undo')
  silent !mkdir ~/.vim/backups > /dev/null 2>&1
  set undodir=~/.vim/backups
  set undofile
endif

" ================ Indentation ======================
set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

filetype plugin on
filetype indent on

" Display tabs and trailing spaces visually
set list
set listchars=tab:▸\ ,trail:•
set nowrap       "Don't wrap lines
set linebreak    "Wrap lines at convenient points

" ================ Folds ============================
set foldmethod=indent   "fold based on indent
set foldnestmax=3       "deepest fold is 3 levels
set nofoldenable        "dont fold by default

" ================ Completion =======================
set wildmode=list:longest
set wildmenu                "enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~ "stuff to ignore when tab completing
set wildignore+=*vim/backups*
set wildignore+=*sass-cache*
set wildignore+=*DS_Store*
set wildignore+=vendor/rails/**
set wildignore+=vendor/cache/**
set wildignore+=*.gem
set wildignore+=log/**
set wildignore+=tmp/**
set wildignore+=*.png,*.jpg,*.gif
set completeopt=preview,menuone

" ================ Scrolling ========================
set scrolloff=8         "Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1

" ================ Clipboard ========================
if has('unnamedplus')
  set clipboard=unnamedplus
else
  set clipboard=unnamed
endif

" ================ GUI ========================
set guioptions-=r
set guioptions-=L
set guioptions-=T " disable macvim
set guifont=Inconsolata\ XL:h17,Inconsolata:h20,Monaco:h17

" ================ Searching ========================
set ignorecase " Case insensitive search
set smartcase  " Non-case sensitive search
set incsearch  " Incremental search
set hlsearch   " Highlight search results

" ================ Mouse ========================
set mousehide
set mouse=a

" ================ THEME ========================
colorscheme jellybeans


" ================ Airline ======================
set laststatus=2 "This makes the airline always show up
let g:airline_left_sep = '⮀'
let g:airline_left_alt_sep = '⮁'
let g:airline_right_sep = '⮂'
let g:airline_right_alt_sep = '⮃'
let g:airline_branch_prefix = '⭠ '
let g:airline_readonly_symbol = '⭤'
let g:airline_linecolumn_prefix = '⭡'
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'
let g:airline#extensions#whitespace#enabled = 1
let g:airline_mode_map = {
      \ 'n'  : 'N',
      \ 'i'  : 'I',
      \ 'R'  : 'R',
      \ 'v'  : 'V',
      \ 'V'  : 'VL',
      \ 'c'  : 'CMD',
      \ '' : 'VB',
      \ }

" ================ Syntastic ======================
let g:syntastic_enable_signs = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_loc_list_height = 5
let g:syntastic_mode_map = { 'mode': 'active',
                           \ 'active_filetypes': [],
                           \ 'passive_filetypes': [] }
let g:syntastic_html_checkers = ['handlebars']
let g:syntastic_error_symbol = '✗' " Hat tip http://git.io/SPIBfg
let g:syntastic_warning_symbol = '⚠'
let g:syntastic_full_redraws = 1

" ================ Fugitive ======================
nnoremap <Leader>gc :Gcommit -v<CR>
nnoremap <Leader>gca :Gcommit -a -v<CR>
nnoremap <Leader>gw :Gwrite<CR>
nnoremap <Leader>gs :Gstatus<CR>
nnoremap <Leader>gp :Git push<CR>
 " Mnemonic, gu = Git Update
nnoremap <Leader>gu :Git pull<CR>
nnoremap <Leader>gd :Gdiff<CR>
" Exit a diff by closing the diff window
nnoremap <Leader>gx :wincmd h<CR>:q<CR>
" Start git command
nnoremap <leader>gi :Git<space>
" Undo the last commit
command! Gcundo :Git reset HEAD~1

" ================ Tagbar ================
nmap <leader>t :TagbarToggle<CR>

" ================ Session ================
let g:session_autosave = 0
let g:session_autoload = 0
nnoremap <leader>os :OpenSession<CR>

" ================ NERDTree ================
nmap <C-i> :NERDTreeToggle<CR>


" ====== FOKN COOL GENERIC KEYMAPS BRO =====
" save the keystrokes, no more shift!
nnoremap ; :
vnoremap ; :

" yank entire buffer
nnoremap gy :%y+<cr>

" select entire buffer
nnoremap vy ggVG

" make V behave like other capitals
nnoremap Y y$

" jump to beginning and end of lines easier
noremap H ^
noremap L $

" create newlines without entering insert mode
nnoremap go o<Esc>k
nnoremap gO O<Esc>j

" Easier redo
nnoremap U :redo<CR>
" Open Quickfix
nnoremap <silent> <leader>f :botright copen<CR>

" Window Movement
nnoremap <silent> gh :wincmd h<CR>
nnoremap <silent> gj :wincmd j<CR>
nnoremap <silent> gk :wincmd k<CR>
nnoremap <silent> gl :wincmd l<CR>

" Previous Window
nnoremap <silent> gp :wincmd p<CR>
" Equal Size Windows
nnoremap <silent> g= :wincmd =<CR>
" Maximize current split
nnoremap <silent> gm <C-w>_<C-w><Bar>
" Swap Windows
nnoremap <silent> gx :wincmd x<CR>
" Split and jump to new window
nnoremap <silent> <leader>hs :split<Bar>:wincmd j<CR>
nnoremap <silent> <leader>vs :vsplit<Bar>:wincmd l<CR>

" Disable ugly search highlights
noremap <silent><leader>/ :nohls<CR>

" Highlight search word under cursor without jumping to next
nnoremap <leader>h *<C-O>

" Quickly switch to last buffer
nnoremap <leader>, :e#<CR>

"Underline the current line with -
nnoremap <silent> <leader>ul yyp<c-v>$r-
nnoremap <silent> <leader>uul yyp<c-v>$r=

" Fix my inability to type
" >doc lookup mode
nnoremap K k
vnoremap K k

" >type visual
nnoremap Q @@


